<h2>My Offers</h2>

<h2>New Offer</h2>






<div id="directionMap"></div>
<form class="styled-form" action="/offers" method="post">
  <div class="row no-max-width">
    <div class="form-group col-md-6 map-group pull-left">
      <label for="origin">Origin City</label>
        <input class="form-control" id="origin-input" type="text" placeholder="Enter a location" name="originCity">
        <input id="origin-lat" type="hidden" name="originCityLatLng[]" value="">
        <input id="origin-lng" type="hidden" name="originCityLatLng[]" value="">
    </div>
    <div class="form-group col-md-6 map-group pull-right">
      <label for="destination">Destination City</label>
        <input class="form-control" id="destination-input" type="text" placeholder="Enter a location" name="destinationCity">
        <input id="destination-lat" type="hidden" name="destinationCityLatLng[]" value="">
        <input id="destination-lng" type="hidden" name="destinationCityLatLng[]" value="">
    </div>
  </div>
  <div class="form-group">
    <label for="car-type">Car Type</label>
    <select class="form-control" id="car-type" name="carType">
                <option value="mini">Mini</option>
                <option value="sedan" selected>Sedan</option>
                <option value="suv">SUV or Van</option>
                <option value="truck">Truck</option>
              </select>
  </div>
  <div class="form-group">
    <label for="spaces-available">Spaces Available</label>
    <select class="form-control" id="spaces-available" name="spacesAvailable">
                <option value="1" selected>1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6" >6</option>
              </select>
  </div>
  <div class="form-group">
    <label for="pets-accepted">Pets Accepted?</label>
    <select class="form-control" id="pets-accepted" name="petsAccepted">
      <option value="yes">Yes</option>
      <option value="no" selected>No</option>
    </select>
  </div>
  <div class="form-group" data-provide="datepicker">
    <label for="departure-date">Departure Date</label>
    <input class="form-control" id="departure-date" type="date" name="departureDate" placeholder="" value="2017-11-01">
  </div>
  <div class="form-group">
    <label for="departure-time">Departure Time</label>
    <select class="form-control" id="departure-time" name="departureTime">
      <option value="morning">Morning</option>
      <option value="afternoon" selected>Afternoon</option>
      <option value="evening">Evening</option>
      <option value="night">Night Flight</option>
    </select>
  </div>
  <div class="form-group">
    <label for="barter-item">What would you like in exchange for this ride?</label>
    <select class="form-control" id="barter-item" name="barterItem">
      <option value="food">Food</option>
      <option value="water" selected>Water</option>
      <option value="gas">Gas</option>
      <option value="humor">Good Humor</option>
    </select>
  </div>

  <button class="btn btn-large btn-success">Add</button>
</form>


<ul>
  <%listOfOffers.forEach((offer) => {%>
    <li>
      <h3><%=offer.origin%></h3> <span>to</span>
      <h3><%=offer.destination%></h3>

      <a href="/offers/<%=offer._id%>/edit">Edit</a>
      <a href="/offers/<%=offer._id%>/delete">Delete</a>
    </li>

    <%})%>
</ul>

<%# <input id="origin-input" class="controls" type="text"
        placeholder="Enter an origin location">

    <input id="destination-input" class="controls" type="text"
        placeholder="Enter a destination location">

    <div id="mode-selector" class="controls">
      <input type="radio" name="type" id="changemode-walking" checked="checked">
      <label for="changemode-walking">Walking</label>

      <input type="radio" name="type" id="changemode-transit">
      <label for="changemode-transit">Transit</label>

      <input type="radio" name="type" id="changemode-driving">
      <label for="changemode-driving">Driving</label>
    </div>%>




       <script async defer
       src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDvKcCoWtaoF6g7rspGQKL1zWMtwliK6hw&libraries=places&callback=initMap">
       </script>
    <script>
      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initMap() {
        var map = new google.maps.Map(document.getElementById('directionMap'), {
          mapTypeControl: false,
          center: {lat: -33.8688, lng: 151.2195},
          zoom: 12,
          zoomControl: false,
          mapTypeControl: false,
          streetViewControl: false,
          rotateControl: false,
          fullscreenControl: false
        });

        new AutocompleteDirectionsHandler(map);
      }

       /**
        * @constructor
       */
      function AutocompleteDirectionsHandler(map) {
        this.map = map;
        this.originPlaceId = null;
        this.destinationPlaceId = null;
        this.travelMode = 'DRIVING';
        var originInput = document.getElementById('origin-input');
        var destinationInput = document.getElementById('destination-input');
        var modeSelector = document.getElementById('mode-selector');
        this.directionsService = new google.maps.DirectionsService;
        this.directionsDisplay = new google.maps.DirectionsRenderer;
        this.directionsDisplay.setMap(map);

        var originAutocomplete = new google.maps.places.Autocomplete(
            originInput, {placeIdOnly: true});
        var destinationAutocomplete = new google.maps.places.Autocomplete(
            destinationInput, {placeIdOnly: true});

        // this.setupClickListener('changemode-walking', 'WALKING');
        // this.setupClickListener('changemode-transit', 'TRANSIT');
        // this.setupClickListener('changemode-driving', 'DRIVING');

        this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
        this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
      }

      // Sets a listener on a radio button to change the filter type on Places
      // Autocomplete.
      AutocompleteDirectionsHandler.prototype.setupClickListener = function(id, mode) {
        var radioButton = document.getElementById(id);
        var me = this;
        radioButton.addEventListener('click', function() {
          me.travelMode = mode;
          me.route();
        });
      };

      AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
        var me = this;
        autocomplete.bindTo('bounds', this.map);
        autocomplete.addListener('place_changed', function() {
          var place = autocomplete.getPlace();
          if (!place.place_id) {
            window.alert("Please select an option from the dropdown list.");
            return;
          }
          if (mode === 'ORIG') {
            me.originPlaceId = place.place_id;
          } else {
            me.destinationPlaceId = place.place_id;
          }
          me.route();
        });

      };

      AutocompleteDirectionsHandler.prototype.route = function() {
        if (!this.originPlaceId || !this.destinationPlaceId) {
          return;
        }
        var me = this;

        this.directionsService.route({
          origin: {'placeId': this.originPlaceId},
          destination: {'placeId': this.destinationPlaceId},
          travelMode: this.travelMode
        }, function(response, status) {
          if (status === 'OK') {

            // console.log(document.getElementById("origin-input").value);
            document.getElementById("origin-lat").value = response.routes["0"].legs["0"].start_location.lat();
            document.getElementById("origin-lng").value = response.routes["0"].legs["0"].start_location.lng();
            document.getElementById("destination-lat").value = response.routes["0"].legs["0"].end_location.lat();
            document.getElementById("destination-lng").value = response.routes["0"].legs["0"].end_location.lng();
            document.getElementById("origin-input").value = this.origin;
            me.directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      };

    </script>
   </script>
